version: '3.8'

services:
  zookeeper:
    restart: always
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "my-topic:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock


#  rabbitmq:
#    container_name: webflux-rabbitmq
#    image: rabbitmq:3.12.8-management
#    restart: always
#    environment:
#      RABBITMQ_DEFAULT_USER: $RABBIT_USERNAME
#      RABBITMQ_DEFAULT_PASS: $RABBIT_PASSWORD
#      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbit disk_free_limit 10737418240 -rabbit memory_high_watermark 0.98
#      TZ: "Asia/Tashkent"
#      RABBITMQ_NODE_PORT: 5670
#    ports:
#      - "5670:5670"
#      - "15670:15672"
#    volumes:
#      - /var/docker-data/rabbitmq_volume:/var/lib/rabbitmq
#      - "./rabbit_enabled_plugins:/etc/rabbitmq/enabled_plugins"
#
#  postgres-test:
#    container_name: postgres-test
#    hostname: postgres
#    image: postgres:16.3
#    restart: always
#    environment:
#      POSTGRES_DB: postgres-test
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: secret
#      PGPORT: 5436
#      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
#      POSTGRES_MAX_CONNECTIONS: 200
#      POSTGRES_SHARED_BUFFERS: 512MB
#      POSTGRES_EFFECTIVE_CACHE_SIZE: 2GB
#      POSTGRES_MAINTENANCE_WORK_MEM: 256MB
#      POSTGRES_CHECKPOINT_COMPLETION_TARGET: 0.9
#      POSTGRES_WAL_BUFFERS: 16MB
#      POSTGRES_DEFAULT_STATISTICS_TARGET: 100
#      POSTGRES_RANDOM_PAGE_COST: 1.1
#      POSTGRES_EFFECTIVE_IO_CONCURRENCY: 200
#      POSTGRES_WORK_MEM: 16MB
#      POSTGRES_MIN_WAL_SIZE: 1GB
#      POSTGRES_MAX_WAL_SIZE: 4GB
#      POSTGRES_MAX_WORKERS: 8
#      POSTGRES_MAX_PARALLEL_WORKERS: 4
#    ports:
#      - "5436:5436"
#    volumes:
#      - postgres_volume:/var/lib/postgresql/data/
#
#  redis:
#    image: redis:latest
#    container_name: redis
#    ports:
#      - "6379:6379"
#
#  user-service:
#    image: user-service:latest
#    build:
#      context: .
#      dockerfile: ./services/user/Dockerfile
#      args:
#        version: ${VERSION}
#    ports:
#      - "8081:8081"
#    environment:
#      DATABASE_HOST: ${DATABASE_HOST}
#      DATABASE_USERNAME: ${DATABASE_USERNAME}
#      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
#      DATABASE_NAME: ${DATABASE_NAME}
#      DATABASE_PORT: ${DATABASE_PORT}
#    volumes:
#      - ./services/user/build/libs/user-${VERSION}.jar:/user.jar
#
#  notification-service:
#    image: notification-service:latest
#    build:
#      context: .
#      dockerfile: ./services/notification/Dockerfile
#      args:
#        version: ${VERSION}
#    ports:
#      - "8082:8082"
#    environment:
#      DATABASE_HOST: ${DATABASE_HOST}
#      DATABASE_USERNAME: ${DATABASE_USERNAME}
#      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
#      DATABASE_NAME: ${DATABASE_NAME}
#      DATABASE_PORT: ${DATABASE_PORT}
#    volumes:
#      - ./services/notification/build/libs/notification-${VERSION}.jar:/notification.jar


volumes:
  postgres_volume:
